# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь
# заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее
# подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email
# (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.

import re

name = input('Input name: ')
surname = input('Input surname: ')
email = input('Input email: ')

name_pattern = '[A-Z{1,1}]$'
surname_pattern = name_pattern

email_pattern = '[a-z_\d]+@[a-z\d]+\.ru|com|org$'

if re.match(name_pattern, name):
    print('Name is correct')
else:
    print('Name is incorrect')

if re.match(surname_pattern, surname):
    print('Surname is correct')
else:
    print('Surname is incorrect')

if re.match(email_pattern, email):
    print('Email is correct')
else:
    print('Email is incorrect')

# второй вариант решений - более короткий

# pattern = '^[А-Я][а-я]+$'
#
# if not re.search(pattern, name):
#     print('Имя введено неверно!')
# if not re.search(pattern, surname):
#     print('Фамилия введена неверно!')
# if not re.search('^[a-z_0-9]+@[a-z0-9]+\.ru|org|com$', email):
#     print('Email введен неверно!')

#
# Задача - 2:
# Вам дан текст:
#
some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!

dot_pattern = '\.{2,}'

if re.search(dot_pattern, some_str):
    print('There is a dot more than one in row.')
else:
    print('There is no dot twice in row')
